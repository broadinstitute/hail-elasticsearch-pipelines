#!/usr/bin/env python

import os
import argparse

p = argparse.ArgumentParser()
p.add_argument("-l", "--local", action="store_true", help="Run hail locally instead of using Spark")
p.add_argument("-o", "--vds", help="Output vds filename")
p.add_argument("vcf_path", nargs="+", help="Path of bgzipped vcf file(s) to annotate.")
args = p.parse_args()

vcf_paths = map(os.path.abspath, args.vcf_path)
for vcf_path in vcf_paths:
    if not os.path.isfile(vcf_path):
        p.error("Invalid file path: %s " % vcf_path) 

def run(cmd):
    print(cmd)
    os.system(cmd)

if args.vds:
    vds_path = os.path.abspath(args.vds)
else:
    # TODO compute a better prefix when len(vcf_paths) > 1
    prefix = os.path.basename(vcf_paths[0]).replace(".vcf.gz", "").replace(".vcf.bgz", "")
    vds_path = os.path.abspath(os.path.join(os.getcwd(), prefix + ".vds"))

hail_command = "hail_local" if args.local else "hail"
vcf_paths = " ".join(["file://"+vcf_path for vcf_path in vcf_paths])


run(
"""time %(hail_command)s -b 2 importvcf -n 250 %(vcf_paths)s splitmulti \
vep --force --block-size 250 --config /home/users/cseed/vep.properties \
write -o file://%(vds_path)s
""" % locals())

#annotatevariants vds -r va.vep -i /user/cseed/synthetic.vep.vds \
#annotatevariants vds -r va.clinvar -i file:///mnt/lustre/weisburd/data/reference_data/clinvar/clinvar_v2016_09_01.vds \
#annotatevariants vds -r va.exac -i file:///mnt/lustre/weisburd/data/reference_data/exac/exac_v1.vds \
#annotatevariants vds -r va.g1k -i file:///mnt/lustre/weisburd/data/reference_data/1kg/1kg_wgs_phase3.vds \
#annotatevariants vds -r va.dbnsfp -i file:///mnt/lustre/weisburd/data/reference_data/dbnsfp/dbNSFP_3.2a_variant.filtered.allhg19_nodup.vds \
#count \
#variantqc sampleqc \
#printschema showglobals \
