#!/usr/bin/env python

import argparse
import os

import pyhail

p = argparse.ArgumentParser()
p.add_argument("-l", "--local", action="store_true", help="Run hail locally")
p.add_argument("-o", "--vds", help="Output vds filename")
p.add_argument("vcf_path", nargs="+", help="Path of bgzipped vcf file(s) to annotate.")
args = p.parse_args()

vcf_paths = map(os.path.abspath, args.vcf_path)
for vcf_path in vcf_paths:
    if not os.path.isfile(vcf_path):
        p.error("Invalid file path: %s " % vcf_path) 

vcf_paths = " ".join(["file://"+vcf_path for vcf_path in vcf_paths])

if args.vds:
    vds_path = os.path.abspath(args.vds)
else:
    # TODO compute a better prefix when len(vcf_paths) > 1
    prefix = os.path.basename(vcf_paths[0]).replace(".vcf.gz", "").replace(".vcf.bgz", "")
    vds_path = os.path.abspath(os.path.join(os.getcwd(), prefix + ".vds"))


hc = pyhail.HailContext(log="hail.log")
vds = (hc.import_vcf(vcf_paths, force_bgz=True, npartitions=250)
       .split_multi()
       .vep('/home/users/cseed/vep.properties', force=True, block_size=250)
       .write('file://' + vds_path))
